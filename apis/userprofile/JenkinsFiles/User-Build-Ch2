properties([
  parameters([
    string(name: 'CONTAINER_REGISTRY_SERVER', defaultValue: 'openhackug94acr.azurecr.io'),
    string(name: 'CONTAINER_REGISTRY_JENKINS_CREDENTIALS', defaultValue: 'acr-credentials'),
  ])
])
pipeline {
    agent {
        docker {
            image "${params.CONTAINER_REGISTRY_SERVER}/devopsoh/nodejs:build"
            args '-u root -v /root/.m2:/root/.m2 -v /var/run/docker.sock:/var/run/docker.sock' 
        }
    }
    environment {
        CONTAINER_REG_CRED = credentials("${params.CONTAINER_REGISTRY_JENKINS_CREDENTIALS}")
        def REGISTRY_SERVER = "${params.CONTAINER_REGISTRY_SERVER}"
        def CONTAINER_IMAGE_NAME = 'devopsoh/api-user'
        def CONTAINER_IMAGE_LABEL = "jenkins-${env.BUILD_ID}"
        def WORKING_DIR = 'apis/userprofile'
    }
    stages {
        stage('DockerBuild') {
            steps {
                sh 'cd ${WORKING_DIR} && docker build . -t ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_LABEL} -t ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:latest'
            }
        }
        stage('DockerPush') {
            steps {
                sh 'docker login -p ${CONTAINER_REG_CRED_PSW} -u ${CONTAINER_REG_CRED_USR} ${REGISTRY_SERVER}'  
                sh 'docker push ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_LABEL}'
                sh 'docker push ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:latest'
            }
        }
    }
}