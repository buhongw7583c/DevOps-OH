REGISTRY_SERVER = 'h2floh.azurecr.io'

pipeline {
    agent {
        docker {
            image "${REGISTRY_SERVER}/devopsoh/go:build"
            args '-v /root/.m2:/root/.m2' 
        }
    }
    environment {
        CONTAINER_REG_CRED = credentials('acr-h2floh-principal')
        def REGISTRY_SERVER = 'h2floh.azurecr.io'
        def CONTAINER_IMAGE_NAME = 'devopsoh/api-trip'
        def CONTAINER_IMAGE_LABEL = "${env.BUILD_ID}"
        def WORKING_DIR = 'apis/trips/'
        def GO111MODULE = 'on'
    }
    stages {
        stage('Build') { 
            steps {
                sh  'cd ${WORKING_DIR} && go get && CGO_ENABLED=0 GOOS=linux go build -o main .' 
            }
        }
        stage('Test') {
            steps {
                sh 'cd ${WORKING_DIR} && go test'
            }
        }
        stage('DockerBuild') {
            steps {
                sh 'cd ${WORKING_DIR} && docker build . -t ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_LABEL} -t ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:latest'
            }
        }
        stage('DockerPush') {
            steps {
                sh 'docker login -p ${CONTAINER_REG_CRED_PSW} -u ${CONTAINER_REG_CRED_USR} ${REGISTRY_SERVER}'  
                sh 'docker push ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_LABEL}'
                sh 'docker push ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:latest'
            }
        }
    }
}