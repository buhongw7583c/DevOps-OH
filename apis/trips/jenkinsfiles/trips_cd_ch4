properties([
  parameters([
    string(name: 'CONTAINER_REGISTRY_SERVER', defaultValue: 'openhackm9g8acr.azurecr.io'),
    string(name: 'AKS_SP_CREDENTIALS', defaultValue: 'aks_sp'),
    string(name: 'SP_TENANT', defaultValue: 'd303113d-db05-4b98-938e-b5ef3f6da08a'),
    string(name: 'AKS_RESSOURCE_GROUP', defaultValue: 'openhackm9g8rg'),
    string(name: 'AKS_CLUSTER_NAME', defaultValue: 'openhackm9g8aks'),
    string(name: 'TRAEFIK_URL', defaultValue: 'akstraefikopenhackm9g8.eastus.cloudapp.azure.com'),
    string(name: 'IMAGE_TAG', defaultValue: 'latest'),
  ])
])
pipeline {
    agent {
        docker {
            image "${params.CONTAINER_REGISTRY_SERVER}/devopsoh/go:build"
            args '-u root -v /root/.m2:/root/.m2 -v /var/run/docker.sock:/var/run/docker.sock' 
        }
    }
    environment {
        AZURE_CRED = credentials("${params.AKS_SP_CREDENTIALS}")
        def REGISTRY_SERVER = "${params.CONTAINER_REGISTRY_SERVER}"
        def TENANT_ID = "${params.SP_TENANT}"
        def AKS_RESSOURCE_GROUP = "${params.AKS_RESSOURCE_GROUP}"
        def AKS_CLUSTER_NAME = "${params.AKS_CLUSTER_NAME}"
        def ENDPOINT = "${params.TRAEFIK_URL}"
        def TAG = "${params.IMAGE_TAG}"
        def CONTAINER_IMAGE_NAME = 'devopsoh/api-trip'
        def WORKING_DIR = 'apis/trips'
    }
    stages {
        stage('Deploying to AKS') {
            steps {
                sh 'az login --service-principal -u ${AZURE_CRED_USR} -p ${AZURE_CRED_PSW} --tenant ${TENANT_ID}'
                sh 'az aks get-credentials --resource-group ${AKS_RESSOURCE_GROUP} --name ${AKS_CLUSTER_NAME}'
                sh "cd ${WORKING_DIR}/charts/mydrive-trips && helm upgrade api-trip . --set repository.image=${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME},blue.tag=${TAG},env.webServerBaseUri=http://${ENDPOINT},ingress.rules.endpoint.host=${ENDPOINT} --debug"
            }
        }
    }
}