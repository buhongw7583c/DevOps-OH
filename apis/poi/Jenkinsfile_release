properties([
  parameters([
    string(name: 'CONTAINER_REGISTRY_SERVER', defaultValue: 'h2floh.azurecr.io'),
    string(name: 'CONTAINER_REGISTRY_JENKINS_CREDENTIALS', defaultValue: 'acr-h2floh-principal'),
    string(name: 'AZURE_JENKINS_CREDENTIALS', defaultValue: 'azure-admin-credentials'),
    string(name: 'AKS_RESSOURCE_GROUP', defaultValue: 'openhacktby1rg'),
    string(name: 'AKS_CLUSTER_NAME', defaultValue: 'openhacktby1aks'),
  ])
])
pipeline {
    agent {
        docker {
            image "${params.CONTAINER_REGISTRY_SERVER}/devopsoh/netcore:build"
            args '-u root -v /root/.m2:/root/.m2 -v /var/run/docker.sock:/var/run/docker.sock' 
        }
    }
    environment {
        AZURE_CRED = credentials("${params.AZURE_JENKINS_CREDENTIALS}")
        def AKS_RESSOURCE_GROUP = "${params.AKS_RESSOURCE_GROUP}"
        def AKS_CLUSTER_NAME = "${params.AKS_CLUSTER_NAME}"
        def PROD_SERVICE_NAME = 'api-poi-svc-prod'
        def WORKING_DIR = 'apis/poi/'
    }
    stages {
        stage("Switching Traefik to use deployment slot as new Production") {
            steps {
                script
                {
                    sh 'az login -p ${AZURE_CRED_PSW} -u ${AZURE_CRED_USR}'  
                    sh 'az aks get-credentials --resource-group ${AKS_RESSOURCE_GROUP} --name ${AKS_CLUSTER_NAME}'
                    def CURR_PROD_SLOT = sh(script: 'kubectl get svc -o jsonpath="{.spec.selector.slot}" ${PROD_SERVICE_NAME}', returnStdout: true).trim()
                    def DEPLOYMENT_SLOT = sh(script: "if [ \\\"blue\\\" == \\\"${CURR_PROD_SLOT}\\\" ]; then echo green; else echo blue; fi;", returnStdout: true).trim()
                    sh "cd ${WORKING_DIR}/charts/mydrive-poi && helm upgrade api-poi . --set productionSlot=${DEPLOYMENT_SLOT} --reuse-values"
                }
            }
        }
    }
}