properties([
  parameters([
    string(name: 'CONTAINER_REGISTRY_SERVER', defaultValue: 'h2floh.azurecr.io'),
    string(name: 'CONTAINER_REGISTRY_JENKINS_CREDENTIALS', defaultValue: 'acr-h2floh-principal'),
    string(name: 'AZURE_JENKINS_CREDENTIALS', defaultValue: 'azure-admin-credentials'),
    string(name: 'AKS_RESSOURCE_GROUP', defaultValue: 'openhacktby1rg'),
    string(name: 'AKS_CLUSTER_NAME', defaultValue: 'openhacktby1aks'),
    string(name: 'ENDPOINT_FQDN', defaultValue: 'akstraefikopenhacktby1.eastasia.cloudapp.azure.com'),  
  ])
])

pipeline {
    agent {
        docker {
            image "${params.CONTAINER_REGISTRY_SERVER}/devopsoh/netcore:build"
            args '-u root -v /root/.m2:/root/.m2 -v /var/run/docker.sock:/var/run/docker.sock' 
        }
    }
    environment {
        CONTAINER_REG_CRED = credentials("${params.CONTAINER_REGISTRY_JENKINS_CREDENTIALS}")
        AZURE_CRED = credentials("${params.AZURE_JENKINS_CREDENTIALS}")
        def REGISTRY_SERVER = "${params.CONTAINER_REGISTRY_SERVER}"
        def AKS_RESSOURCE_GROUP = "${params.AKS_RESSOURCE_GROUP}"
        def AKS_CLUSTER_NAME = "${params.AKS_CLUSTER_NAME}"
        def CONTAINER_IMAGE_NAME = 'devopsoh/api-poi'
        def CONTAINER_IMAGE_LABEL = "${env.BUILD_ID}"
        def ENDPOINT_FQDN = "${params.ENDPOINT_FQDN}"
        def WORKING_DIR = 'apis/poi/'
    }
     stages {
        stage('Deploy') {
            steps {
                sh 'az login -p ${AZURE_CRED_PSW} -u ${AZURE_CRED_USR}'  
                sh 'az aks get-credentials --resource-group ${AKS_RESSOURCE_GROUP} --name ${AKS_CLUSTER_NAME}'
                sh "sed -i 's,[ContainerImageName],${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:latest,g' ${WORKING_DIR}/charts/mydrive-poi/values.yaml"
                sh "sed -i 's/[EndpointFQDN]/${ENDPOINT_FQDN}/g' ${WORKING_DIR}/charts/mydrive-poi/values.yaml"
                sh 'cat ${WORKING_DIR}/charts/mydrive-poi/values.yaml'
                //sh 'kubectl get pods'
                //sh 'helm list'
                sh 'helm init --upgrade'
                sh 'helm install ${WORKING_DIR}/charts/mydrive-poi'
            }
        }
    //     stage('Build') { 
    //         steps {
    //             sh  'cd ${WORKING_DIR} && dotnet build' 
    //         }
    //     }
    //     stage('Test') {
    //         steps {
    //             sh 'cd ${WORKING_DIR} && dotnet test'
    //         }
    //     }
    //     stage('DockerBuild') {
    //         steps {
    //             sh 'cd ${WORKING_DIR}/web && docker build . -t ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_LABEL} -t ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:latest'
    //         }
    //     }
    //     stage('DockerPush') {
    //         steps {
    //             sh 'docker login -p ${CONTAINER_REG_CRED_PSW} -u ${CONTAINER_REG_CRED_USR} ${REGISTRY_SERVER}'  
    //             sh 'docker push ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_LABEL}'
    //             sh 'docker push ${REGISTRY_SERVER}/${CONTAINER_IMAGE_NAME}:latest'
    //         }
    //     }
    }
}